<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>roster_submit_approve</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>current.workflow_state=="6" &amp;&amp; current.to_slc==gs.getUserID()</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <hint>Click to Approve</hint>
        <isolate_script>false</isolate_script>
        <list_action>true</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>true</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Approve</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[
// var budget = current.base_allotted+1; // RR
// var actual = current.actual_booked; // RR
// current.seat_fill_per = (current.actual_booked/current.base_allotted)*100; // RR
// var differ = (budget-actual); // RR
// current.difference=differ; // RR

// ReduceAllocation();
// extrapolate();
// AddAllocation();
// action.setRedirectURL(current);

// function ReduceAllocation(){
// 	gr = new GlideRecord('x_isgi_roster_allocation');
// 	gr.addQuery('slc',current.to_slc);
// 	gr.addQuery('month_value',current.month);
// 	gr.query();
// 	gr.getRowCount();
// 	if(gr.getRowCount()==0){
// 		gs.addErrorMessage('No allocation record found');	
// 	}	
// 	else{
// 		if(gr.next()){
// 			if(gr.total_budget_seats>0){
// 				gr.total_budget_seats=gr.total_budget_seats-1;

// 				var totalseatfill = (gr.total_actual_seats/gr.total_budget_seats)*100; // RR
// 				gr.seat_fill_per=totalseatfill;	 // RR
// 				gr.difference=(gr.total_budget_seats-gr.total_actual_seats);	 // RR

// 				gr.update();	
// 			}
// 		}
// 	}
// }

// function AddAllocation(){
// 	slc = new GlideRecord('x_isgi_roster_allocation');
// 	slc.addQuery('slc',current.slc);
// 	slc.addQuery('month_value',current.month);
// 	slc.query();
// 	if(slc.next()){
// 		slc.total_budget_seats=slc.total_budget_seats+1;

// 		var totalseatfill = (slc.total_actual_seats/slc.total_budget_seats)*100; // RR
// 		slc.seat_fill_per=totalseatfill;	 // RR
// 		slc.difference=(slc.total_budget_seats-slc.total_actual_seats);	 // RR

// 		slc.update();	
// 	}	
// }



// function extrapolate(){

// 	var contract_tenure = 1;
// 	var reoccur = current.days;
// 	var count = (reoccur-1);
// 	var x = 0;
// 	var n = 0;
// 	for (x; x <= count; x+=1) {//iterating loop_max number of times.
// 		Daily();
// 	}

// 	function Daily(){
// 		var sdt = current.roster_start_date;
// 		var gdt = new GlideDate();
// 		gdt.setValue(sdt);
// 		gdt.addDaysLocalTime(x);
// 		var now = gdt;
// 		var gr = new GlideRecord('x_isgi_roster_calendar');
// 		gr.initialize();
// 		gr.workflow_state="2";
// 		gr.parent_id=current.sys_id;
// 		gr.start_date = gdt;
// 		gr.end_date=current.end_date;
// 		gr.name=current.name.getDisplayValue();
// 		gr.emp_id=current.emp_id.getDisplayValue();
// 		gr.team_name=current.team_name.getDisplayValue();
// 		gr.email_id=current.email_id.getDisplayValue();
// 		gr.department=current.department.getDisplayValue();
// 		gr.employee_manager=current.manager.getDisplayValue();
// 		gr.insert();
// 	}
// }

try {
    current.workflow_state = "5";
    current.active = true;
    current.update();

    var allocationRequestUpdate = new GlideRecord("x_isgi_roster_allocation");
    allocationRequestUpdate.addEncodedQuery("month_value=" + current.month + "^monthSTARTSWITH" + current.roster_start_date + "^slc=" + current.to_slc);
    allocationRequestUpdate.query();
    if (allocationRequestUpdate.next()) {
        allocationRequestUpdate.total_budget_seats = allocationRequestUpdate.total_budget_seats - 1;
        allocationRequestUpdate.update();
    }

    var allocationUpdate = new GlideRecord("x_isgi_roster_allocation");
    allocationUpdate.addEncodedQuery("month_value=" + current.month + "^monthSTARTSWITH" + current.roster_start_date + "^slc=" + current.slc);
    allocationUpdate.query();
    if (allocationUpdate.next()) {
        allocationUpdate.total_budget_seats = allocationUpdate.total_budget_seats + 1;
        allocationUpdate.update();
        gs.eventQueue('x_isgi_roster.update.roster.record', allocationUpdate);
    }

} catch (e) {
    gs.error("Error in the UI action Approve " + e);
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>mohamed.rafiulla@isg-one.com</sys_created_by>
        <sys_created_on>2020-12-18 11:18:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8eac265f1bc52c109d4e6392f54bcb5a</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>Approve</sys_name>
        <sys_overrides/>
        <sys_package display_value="roster" source="x_isgi_roster">3f44a5b11b739c149d4e6392f54bcbbf</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="roster">3f44a5b11b739c149d4e6392f54bcbbf</sys_scope>
        <sys_update_name>sys_ui_action_8eac265f1bc52c109d4e6392f54bcb5a</sys_update_name>
        <sys_updated_by>mohamed.rafiulla@isg-one.com</sys_updated_by>
        <sys_updated_on>2021-01-20 11:28:59</sys_updated_on>
        <table>x_isgi_roster_plan</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
