<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_isgi_roster_plan</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Duplication</name>
        <order>40</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var dateRange = {start:[],end:[]};
	//get new start and end date, converting to numeric to avoid issues while comparing
	var currentStartDate = new GlideDateTime(''+current.roster_start_date).getNumericValue();
	var currentEndDate = new GlideDateTime(''+current.end_date).getNumericValue();

	var dateObj = getDateRange(); // to get all existing date ranges for the user

//To check new date range does not come under any existing date ranges
	for(var i=0;i<=dateObj.start.length-1;i++){
		if (parseInt(dateObj.start[i]) <= currentStartDate && currentStartDate <= parseInt(dateObj.end[i])){
			current.setAbortAction(true);
gs.addErrorMessage('This roster seat cant be booked as all the allocated seats for your BU is already been blocked. Please reach out to your SLC for more details.');
		}
			
		else if (parseInt(dateObj.start[i]) <= currentEndDate && currentEndDate <= parseInt(dateObj.end[i])){
			current.setAbortAction(true);
gs.addErrorMessage('This roster seat cant be booked as all the allocated seats for your BU is already been blocked. Please reach out to your SLC for more details.');
		}
			
		else if (currentStartDate < parseInt(dateObj.start[i]) && parseInt(dateObj.end[i]) < currentEndDate)
			{
			current.setAbortAction(true);
gs.addErrorMessage('This roster seat cant be booked as all the allocated seats for your BU is already been blocked. Please reach out to your SLC for more details.');
		}
		}


	function getDateRange(){
		var newGr = new GlideRecord("x_isgi_roster_plan");
		newGr.addQuery("name", ""+current.name);
		newGr.query();
		while(newGr.next()) {

			var startDates = new GlideDateTime(''+newGr.roster_start_date).getNumericValue();

			var endDates = new GlideDateTime(''+newGr.end_date).getNumericValue();
			dateRange.start.push(startDates);
			dateRange.end.push(endDates);

		}
		return dateRange;
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>mohamed.rafiulla@isg-one.com</sys_created_by>
        <sys_created_on>2020-11-23 08:44:46</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>70d859571be4a450af1ef436464bcb0f</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>Check Duplication</sys_name>
        <sys_overrides/>
        <sys_package display_value="roster" source="x_isgi_roster">3f44a5b11b739c149d4e6392f54bcbbf</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="roster">3f44a5b11b739c149d4e6392f54bcbbf</sys_scope>
        <sys_update_name>sys_script_70d859571be4a450af1ef436464bcb0f</sys_update_name>
        <sys_updated_by>mohamed.rafiulla@isg-one.com</sys_updated_by>
        <sys_updated_on>2020-12-21 16:21:18</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=70d859571be4a450af1ef436464bcb0f"/>
</record_update>
