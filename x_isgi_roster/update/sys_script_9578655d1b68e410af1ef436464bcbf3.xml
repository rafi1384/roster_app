<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_isgi_roster_plan</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Values</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
Endates();
StartDates();	
dupCheck();
	
function Endates(){	
var EndDate = [];
var gr = new GlideRecord('x_isgi_roster_plan');
gr.addQuery('name',current.name);
gr.query();
while(gr.next())
{	
EndDate.push(gr.end_date.toString());
		
}
var ED= EndDate.join(',');
gs.addInfoMessage("End Date:  " + ED);	
}	

function StartDates(){	
var StartDates = [];
var gr1 = new GlideRecord('x_isgi_roster_plan');
gr1.addQuery('name',current.name);
gr1.query();
while(gr1.next())
{	
StartDates.push(gr1.roster_start_date.toString());
		
}
var SD= StartDates.join(',');
gs.addInfoMessage("Start Date :   " + SD);	
}	

function dupCheck(){

var dup = new GlideRecord('x_isgi_roster_plan');
	dup.addQuery('name',current.name);
	dup.addQuery('roster_start_date',"CONTAINS",SD);
	dup.addQuery('end_date',"CONTAINS",ED);
	dup.query();
	var recordsCount = dup.getRowCount();
	gs.addInfoMessage(recordsCount);
	if(dup.next()){
	gs.addErrorMessage('A record already exists');
	current.setAbortAction(true);
	}
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>mohamed.rafiulla@isg-one.com</sys_created_by>
        <sys_created_on>2020-11-17 04:46:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9578655d1b68e410af1ef436464bcbf3</sys_id>
        <sys_mod_count>78</sys_mod_count>
        <sys_name>Check Values</sys_name>
        <sys_overrides/>
        <sys_package display_value="roster" source="x_isgi_roster">3f44a5b11b739c149d4e6392f54bcbbf</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="roster">3f44a5b11b739c149d4e6392f54bcbbf</sys_scope>
        <sys_update_name>sys_script_9578655d1b68e410af1ef436464bcbf3</sys_update_name>
        <sys_updated_by>mohamed.rafiulla@isg-one.com</sys_updated_by>
        <sys_updated_on>2020-11-18 12:16:23</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9578655d1b68e410af1ef436464bcbf3"/>
</record_update>
